version: '3.8'

services:
  seaseeai-api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - SEASEEAI_ENV=production
      - SEASEEAI_CONFIG=/app/config/production.yaml
    volumes:
      - ./models:/app/models
      - ./logs:/app/logs
      - ./data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  seaseeai-dashboard:
    build: .
    ports:
      - "8501:8501"
    environment:
      - SEASEEAI_ENV=dashboard
    command: streamlit run src/dashboard/streamlit_app.py --server.port=8501 --server.address=0.0.0.0
    volumes:
      - ./models:/app/models
    depends_on:
      - seaseeai-api
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./monitoring/grafana:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  redis_data:
  grafana_data:
